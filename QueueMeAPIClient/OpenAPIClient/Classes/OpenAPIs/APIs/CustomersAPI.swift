//
// CustomersAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class CustomersAPI {

    /**

     - parameter customersDetailsModel: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func customersCustomersCreate(customersDetailsModel: CustomersDetailsModel, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CustomersDetailsModel?, _ error: Error?) -> Void)) -> RequestTask {
        return customersCustomersCreateWithRequestBuilder(customersDetailsModel: customersDetailsModel).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - POST /customers/customers/
     - Bearer Token:
       - type: http
       - name: jwtAuth
     - parameter customersDetailsModel: (body)  
     - returns: RequestBuilder<CustomersDetailsModel> 
     */
    open class func customersCustomersCreateWithRequestBuilder(customersDetailsModel: CustomersDetailsModel) -> RequestBuilder<CustomersDetailsModel> {
        let localVariablePath = "/customers/customers/"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: customersDetailsModel)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CustomersDetailsModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter id: (path) A unique integer value identifying this customers details model. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func customersCustomersDestroy(id: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) -> RequestTask {
        return customersCustomersDestroyWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - DELETE /customers/customers/{id}/
     - Bearer Token:
       - type: http
       - name: jwtAuth
     - parameter id: (path) A unique integer value identifying this customers details model. 
     - returns: RequestBuilder<Void> 
     */
    open class func customersCustomersDestroyWithRequestBuilder(id: Int) -> RequestBuilder<Void> {
        var localVariablePath = "/customers/customers/{id}/"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter customerType
     */
    public enum CustomerType_customersCustomersList: String, CaseIterable {
        case newCustomer = "new_customer"
        case regular = "regular"
        case vip = "vip"
    }

    /**
     * enum for parameter gender
     */
    public enum Gender_customersCustomersList: String, CaseIterable {
        case female = "female"
        case male = "male"
    }

    /**

     - parameter address: (query)  (optional)
     - parameter birthDate: (query)  (optional)
     - parameter customerType: (query) * &#x60;regular&#x60; - Regular * &#x60;vip&#x60; - VIP * &#x60;new_customer&#x60; - New Customer (optional)
     - parameter gender: (query) * &#x60;male&#x60; - Male * &#x60;female&#x60; - Female (optional)
     - parameter name: (query)  (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter phoneNumber: (query)  (optional)
     - parameter preferredServices: (query)  (optional)
     - parameter query: (query)  (optional)
     - parameter user: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func customersCustomersList(address: String? = nil, birthDate: Date? = nil, customerType: CustomerType_customersCustomersList? = nil, gender: Gender_customersCustomersList? = nil, name: String? = nil, ordering: String? = nil, page: Int? = nil, phoneNumber: String? = nil, preferredServices: [Int]? = nil, query: String? = nil, user: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: PaginatedCustomersDetailsModelList?, _ error: Error?) -> Void)) -> RequestTask {
        return customersCustomersListWithRequestBuilder(address: address, birthDate: birthDate, customerType: customerType, gender: gender, name: name, ordering: ordering, page: page, phoneNumber: phoneNumber, preferredServices: preferredServices, query: query, user: user).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /customers/customers/
     - Bearer Token:
       - type: http
       - name: jwtAuth
     - parameter address: (query)  (optional)
     - parameter birthDate: (query)  (optional)
     - parameter customerType: (query) * &#x60;regular&#x60; - Regular * &#x60;vip&#x60; - VIP * &#x60;new_customer&#x60; - New Customer (optional)
     - parameter gender: (query) * &#x60;male&#x60; - Male * &#x60;female&#x60; - Female (optional)
     - parameter name: (query)  (optional)
     - parameter ordering: (query) Which field to use when ordering the results. (optional)
     - parameter page: (query) A page number within the paginated result set. (optional)
     - parameter phoneNumber: (query)  (optional)
     - parameter preferredServices: (query)  (optional)
     - parameter query: (query)  (optional)
     - parameter user: (query)  (optional)
     - returns: RequestBuilder<PaginatedCustomersDetailsModelList> 
     */
    open class func customersCustomersListWithRequestBuilder(address: String? = nil, birthDate: Date? = nil, customerType: CustomerType_customersCustomersList? = nil, gender: Gender_customersCustomersList? = nil, name: String? = nil, ordering: String? = nil, page: Int? = nil, phoneNumber: String? = nil, preferredServices: [Int]? = nil, query: String? = nil, user: Int? = nil) -> RequestBuilder<PaginatedCustomersDetailsModelList> {
        let localVariablePath = "/customers/customers/"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "address": (wrappedValue: address?.encodeToJSON(), isExplode: true),
            "birth_date": (wrappedValue: birthDate?.encodeToJSON(), isExplode: true),
            "customer_type": (wrappedValue: customerType?.encodeToJSON(), isExplode: true),
            "gender": (wrappedValue: gender?.encodeToJSON(), isExplode: true),
            "name": (wrappedValue: name?.encodeToJSON(), isExplode: true),
            "ordering": (wrappedValue: ordering?.encodeToJSON(), isExplode: true),
            "page": (wrappedValue: page?.encodeToJSON(), isExplode: true),
            "phone_number": (wrappedValue: phoneNumber?.encodeToJSON(), isExplode: true),
            "preferred_services": (wrappedValue: preferredServices?.encodeToJSON(), isExplode: true),
            "query": (wrappedValue: query?.encodeToJSON(), isExplode: true),
            "user": (wrappedValue: user?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<PaginatedCustomersDetailsModelList>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter id: (path) A unique integer value identifying this customers details model. 
     - parameter patchedCustomersDetailsModel: (body)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func customersCustomersPartialUpdate(id: Int, patchedCustomersDetailsModel: PatchedCustomersDetailsModel? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CustomersDetailsModel?, _ error: Error?) -> Void)) -> RequestTask {
        return customersCustomersPartialUpdateWithRequestBuilder(id: id, patchedCustomersDetailsModel: patchedCustomersDetailsModel).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - PATCH /customers/customers/{id}/
     - Bearer Token:
       - type: http
       - name: jwtAuth
     - parameter id: (path) A unique integer value identifying this customers details model. 
     - parameter patchedCustomersDetailsModel: (body)  (optional)
     - returns: RequestBuilder<CustomersDetailsModel> 
     */
    open class func customersCustomersPartialUpdateWithRequestBuilder(id: Int, patchedCustomersDetailsModel: PatchedCustomersDetailsModel? = nil) -> RequestBuilder<CustomersDetailsModel> {
        var localVariablePath = "/customers/customers/{id}/"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: patchedCustomersDetailsModel)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CustomersDetailsModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter id: (path) A unique integer value identifying this customers details model. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func customersCustomersRetrieve(id: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CustomersDetailsModel?, _ error: Error?) -> Void)) -> RequestTask {
        return customersCustomersRetrieveWithRequestBuilder(id: id).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /customers/customers/{id}/
     - Bearer Token:
       - type: http
       - name: jwtAuth
     - parameter id: (path) A unique integer value identifying this customers details model. 
     - returns: RequestBuilder<CustomersDetailsModel> 
     */
    open class func customersCustomersRetrieveWithRequestBuilder(id: Int) -> RequestBuilder<CustomersDetailsModel> {
        var localVariablePath = "/customers/customers/{id}/"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CustomersDetailsModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter id: (path) A unique integer value identifying this customers details model. 
     - parameter customersDetailsModel: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func customersCustomersUpdate(id: Int, customersDetailsModel: CustomersDetailsModel, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CustomersDetailsModel?, _ error: Error?) -> Void)) -> RequestTask {
        return customersCustomersUpdateWithRequestBuilder(id: id, customersDetailsModel: customersDetailsModel).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - PUT /customers/customers/{id}/
     - Bearer Token:
       - type: http
       - name: jwtAuth
     - parameter id: (path) A unique integer value identifying this customers details model. 
     - parameter customersDetailsModel: (body)  
     - returns: RequestBuilder<CustomersDetailsModel> 
     */
    open class func customersCustomersUpdateWithRequestBuilder(id: Int, customersDetailsModel: CustomersDetailsModel) -> RequestBuilder<CustomersDetailsModel> {
        var localVariablePath = "/customers/customers/{id}/"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: customersDetailsModel)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CustomersDetailsModel>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
