//
// ShopServiceDetailsModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ShopServiceDetailsModel: Codable, JSONEncodable, Hashable {

    public static let nameRule = StringRule(minLength: nil, maxLength: 300, pattern: nil)
    public static let nameArabicRule = StringRule(minLength: nil, maxLength: 300, pattern: nil)
    public static let priceRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^-?\\d{0,8}(?:\\.\\d{0,2})?$/")
    public var id: Int
    public var timeSlots: [ShopServiceTimeSlot]
    public var bookingsCount: Int
    public var duration: String
    public var serviceType: ServiceTypeEnum?
    public var name: String
    public var nameArabic: String?
    public var description: String?
    public var price: Decimal
    public var isAvailable: Bool?
    public var createdAt: Date
    public var forecastData: AnyCodable?
    public var shop: Int
    public var category: Int
    public var specialists: [Int]?

    public init(id: Int, timeSlots: [ShopServiceTimeSlot], bookingsCount: Int, duration: String, serviceType: ServiceTypeEnum? = nil, name: String, nameArabic: String? = nil, description: String? = nil, price: Decimal, isAvailable: Bool? = nil, createdAt: Date, forecastData: AnyCodable?, shop: Int, category: Int, specialists: [Int]? = nil) {
        self.id = id
        self.timeSlots = timeSlots
        self.bookingsCount = bookingsCount
        self.duration = duration
        self.serviceType = serviceType
        self.name = name
        self.nameArabic = nameArabic
        self.description = description
        self.price = price
        self.isAvailable = isAvailable
        self.createdAt = createdAt
        self.forecastData = forecastData
        self.shop = shop
        self.category = category
        self.specialists = specialists
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case timeSlots = "time_slots"
        case bookingsCount = "bookings_count"
        case duration
        case serviceType = "service_type"
        case name
        case nameArabic = "name_arabic"
        case description
        case price
        case isAvailable = "is_available"
        case createdAt = "created_at"
        case forecastData = "forecast_data"
        case shop
        case category
        case specialists
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(timeSlots, forKey: .timeSlots)
        try container.encode(bookingsCount, forKey: .bookingsCount)
        try container.encode(duration, forKey: .duration)
        try container.encodeIfPresent(serviceType, forKey: .serviceType)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(nameArabic, forKey: .nameArabic)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encode(price, forKey: .price)
        try container.encodeIfPresent(isAvailable, forKey: .isAvailable)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(forecastData, forKey: .forecastData)
        try container.encode(shop, forKey: .shop)
        try container.encode(category, forKey: .category)
        try container.encodeIfPresent(specialists, forKey: .specialists)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ShopServiceDetailsModel: Identifiable {}
