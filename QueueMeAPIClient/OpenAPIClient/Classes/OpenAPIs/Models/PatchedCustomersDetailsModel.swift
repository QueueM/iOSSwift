//
// PatchedCustomersDetailsModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PatchedCustomersDetailsModel: Codable, JSONEncodable, Hashable {

    public static let nameRule = StringRule(minLength: nil, maxLength: 300, pattern: nil)
    public static let phoneNumberRule = StringRule(minLength: nil, maxLength: 20, pattern: nil)
    public var id: Int?
    public var name: String?
    public var phoneNumber: String?
    public var birthDate: Date?
    public var gender: CustomersDetailsModelGender?
    public var profilePhoto: String?
    public var customerType: CustomerTypeEnum?
    public var address: String?
    public var user: Int?
    public var preferredServices: [Int]?

    public init(id: Int? = nil, name: String? = nil, phoneNumber: String? = nil, birthDate: Date? = nil, gender: CustomersDetailsModelGender? = nil, profilePhoto: String? = nil, customerType: CustomerTypeEnum? = nil, address: String? = nil, user: Int? = nil, preferredServices: [Int]? = nil) {
        self.id = id
        self.name = name
        self.phoneNumber = phoneNumber
        self.birthDate = birthDate
        self.gender = gender
        self.profilePhoto = profilePhoto
        self.customerType = customerType
        self.address = address
        self.user = user
        self.preferredServices = preferredServices
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case phoneNumber = "phone_number"
        case birthDate = "birth_date"
        case gender
        case profilePhoto = "profile_photo"
        case customerType = "customer_type"
        case address
        case user
        case preferredServices = "preferred_services"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(phoneNumber, forKey: .phoneNumber)
        try container.encodeIfPresent(birthDate, forKey: .birthDate)
        try container.encodeIfPresent(gender, forKey: .gender)
        try container.encodeIfPresent(profilePhoto, forKey: .profilePhoto)
        try container.encodeIfPresent(customerType, forKey: .customerType)
        try container.encodeIfPresent(address, forKey: .address)
        try container.encodeIfPresent(user, forKey: .user)
        try container.encodeIfPresent(preferredServices, forKey: .preferredServices)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension PatchedCustomersDetailsModel: Identifiable {}
