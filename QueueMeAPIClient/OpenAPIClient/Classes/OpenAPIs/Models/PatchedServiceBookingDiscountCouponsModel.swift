//
// PatchedServiceBookingDiscountCouponsModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PatchedServiceBookingDiscountCouponsModel: Codable, JSONEncodable, Hashable {

    public static let codeRule = StringRule(minLength: nil, maxLength: 20, pattern: nil)
    public static let discountValueRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^-?\\d{0,8}(?:\\.\\d{0,2})?$/")
    public static let maxUsageRule = NumericRule<Int64>(minimum: 0, exclusiveMinimum: false, maximum: 9223372036854775807, exclusiveMaximum: false, multipleOf: nil)
    public var id: Int?
    public var code: String?
    public var discountType: DiscountTypeEnum?
    public var discountValue: Decimal?
    public var startDate: Date?
    public var endDate: Date?
    public var maxUsage: Int64?
    public var isActive: Bool?
    public var applyToAllServices: Bool?
    public var shop: Int?
    public var services: [Int]?

    public init(id: Int? = nil, code: String? = nil, discountType: DiscountTypeEnum? = nil, discountValue: Decimal? = nil, startDate: Date? = nil, endDate: Date? = nil, maxUsage: Int64? = nil, isActive: Bool? = nil, applyToAllServices: Bool? = nil, shop: Int? = nil, services: [Int]? = nil) {
        self.id = id
        self.code = code
        self.discountType = discountType
        self.discountValue = discountValue
        self.startDate = startDate
        self.endDate = endDate
        self.maxUsage = maxUsage
        self.isActive = isActive
        self.applyToAllServices = applyToAllServices
        self.shop = shop
        self.services = services
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case code
        case discountType = "discount_type"
        case discountValue = "discount_value"
        case startDate = "start_date"
        case endDate = "end_date"
        case maxUsage = "max_usage"
        case isActive = "is_active"
        case applyToAllServices = "apply_to_all_services"
        case shop
        case services
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(code, forKey: .code)
        try container.encodeIfPresent(discountType, forKey: .discountType)
        try container.encodeIfPresent(discountValue, forKey: .discountValue)
        try container.encodeIfPresent(startDate, forKey: .startDate)
        try container.encodeIfPresent(endDate, forKey: .endDate)
        try container.encodeIfPresent(maxUsage, forKey: .maxUsage)
        try container.encodeIfPresent(isActive, forKey: .isActive)
        try container.encodeIfPresent(applyToAllServices, forKey: .applyToAllServices)
        try container.encodeIfPresent(shop, forKey: .shop)
        try container.encodeIfPresent(services, forKey: .services)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension PatchedServiceBookingDiscountCouponsModel: Identifiable {}
