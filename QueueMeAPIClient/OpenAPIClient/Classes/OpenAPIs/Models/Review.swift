//
// Review.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Review: Codable, JSONEncodable, Hashable {

    public static let titleRule = StringRule(minLength: nil, maxLength: 255, pattern: nil)
    public static let ratingRule = NumericRule<Int64>(minimum: 0, exclusiveMinimum: false, maximum: 9223372036854775807, exclusiveMaximum: false, multipleOf: nil)
    public static let objectIdRule = NumericRule<Int64>(minimum: 0, exclusiveMinimum: false, maximum: 9223372036854775807, exclusiveMaximum: false, multipleOf: nil)
    public var id: Int
    public var user: Int
    /** Short title for the review */
    public var title: String
    /** Rating (1 to 5 stars) */
    public var rating: Int64
    /** Detailed review text */
    public var comment: String?
    public var createdAt: Date
    public var contentType: String
    public var objectId: Int64
    /** Sentiment analysis score */
    public var sentimentScore: Double?

    public init(id: Int, user: Int, title: String, rating: Int64, comment: String? = nil, createdAt: Date, contentType: String, objectId: Int64, sentimentScore: Double?) {
        self.id = id
        self.user = user
        self.title = title
        self.rating = rating
        self.comment = comment
        self.createdAt = createdAt
        self.contentType = contentType
        self.objectId = objectId
        self.sentimentScore = sentimentScore
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case user
        case title
        case rating
        case comment
        case createdAt = "created_at"
        case contentType = "content_type"
        case objectId = "object_id"
        case sentimentScore = "sentiment_score"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(user, forKey: .user)
        try container.encode(title, forKey: .title)
        try container.encode(rating, forKey: .rating)
        try container.encodeIfPresent(comment, forKey: .comment)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(contentType, forKey: .contentType)
        try container.encode(objectId, forKey: .objectId)
        try container.encode(sentimentScore, forKey: .sentimentScore)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension Review: Identifiable {}
