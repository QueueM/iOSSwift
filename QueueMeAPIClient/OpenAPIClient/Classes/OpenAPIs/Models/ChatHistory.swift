//
// ChatHistory.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ChatHistory: Codable, JSONEncodable, Hashable {

    public static let sentByRule = NumericRule<Int64>(minimum: -9223372036854775808, exclusiveMinimum: false, maximum: 9223372036854775807, exclusiveMaximum: false, multipleOf: nil)
    public var id: Int
    public var botResponse: String
    public var sentBy: Int64
    public var message: String
    public var createdAt: Date
    public var room: Int

    public init(id: Int, botResponse: String, sentBy: Int64, message: String, createdAt: Date, room: Int) {
        self.id = id
        self.botResponse = botResponse
        self.sentBy = sentBy
        self.message = message
        self.createdAt = createdAt
        self.room = room
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case botResponse = "bot_response"
        case sentBy = "sent_by"
        case message
        case createdAt
        case room
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(botResponse, forKey: .botResponse)
        try container.encode(sentBy, forKey: .sentBy)
        try container.encode(message, forKey: .message)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(room, forKey: .room)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ChatHistory: Identifiable {}
