//
// PatchedNotifications.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PatchedNotifications: Codable, JSONEncodable, Hashable {

    public static let titleRule = StringRule(minLength: nil, maxLength: 255, pattern: nil)
    public var id: Int?
    public var title: String?
    public var message: String?
    public var createdAt: Date?
    public var isRead: Bool?
    public var user: Int?

    public init(id: Int? = nil, title: String? = nil, message: String? = nil, createdAt: Date? = nil, isRead: Bool? = nil, user: Int? = nil) {
        self.id = id
        self.title = title
        self.message = message
        self.createdAt = createdAt
        self.isRead = isRead
        self.user = user
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case title
        case message
        case createdAt = "created_at"
        case isRead = "is_read"
        case user
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(message, forKey: .message)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(isRead, forKey: .isRead)
        try container.encodeIfPresent(user, forKey: .user)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension PatchedNotifications: Identifiable {}
