//
// EmployeeDetails.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct EmployeeDetails: Codable, JSONEncodable, Hashable {

    public static let nameRule = StringRule(minLength: nil, maxLength: 200, pattern: nil)
    public static let positionRule = StringRule(minLength: nil, maxLength: 100, pattern: nil)
    public var id: Int
    public var workingHours: [EmployeeWorkingHours]
    /** Return a list of role objects for this employee. */
    public var roles: [String: AnyCodable]
    public var name: String
    public var position: String?
    public var salary: Double?
    /** AI performance analysis data */
    public var aiPerformanceData: AnyCodable?
    public var createdAt: Date
    public var user: Int?
    public var company: Int?
    public var shop: Int

    public init(id: Int, workingHours: [EmployeeWorkingHours], roles: [String: AnyCodable], name: String, position: String? = nil, salary: Double? = nil, aiPerformanceData: AnyCodable? = nil, createdAt: Date, user: Int? = nil, company: Int? = nil, shop: Int) {
        self.id = id
        self.workingHours = workingHours
        self.roles = roles
        self.name = name
        self.position = position
        self.salary = salary
        self.aiPerformanceData = aiPerformanceData
        self.createdAt = createdAt
        self.user = user
        self.company = company
        self.shop = shop
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case workingHours = "working_hours"
        case roles
        case name
        case position
        case salary
        case aiPerformanceData = "ai_performance_data"
        case createdAt = "created_at"
        case user
        case company
        case shop
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(workingHours, forKey: .workingHours)
        try container.encode(roles, forKey: .roles)
        try container.encode(name, forKey: .name)
        try container.encodeIfPresent(position, forKey: .position)
        try container.encodeIfPresent(salary, forKey: .salary)
        try container.encodeIfPresent(aiPerformanceData, forKey: .aiPerformanceData)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(user, forKey: .user)
        try container.encodeIfPresent(company, forKey: .company)
        try container.encode(shop, forKey: .shop)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension EmployeeDetails: Identifiable {}
