//
// Comment.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Comment: Codable, JSONEncodable, Hashable {

    public var id: Int
    /** Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
    public var user: String
    public var reel: Int
    public var text: String
    public var createdAt: Date
    public var likeCount: Int
    public var parent: Int?
    public var replies: [String: AnyCodable]

    public init(id: Int, user: String, reel: Int, text: String, createdAt: Date, likeCount: Int, parent: Int? = nil, replies: [String: AnyCodable]) {
        self.id = id
        self.user = user
        self.reel = reel
        self.text = text
        self.createdAt = createdAt
        self.likeCount = likeCount
        self.parent = parent
        self.replies = replies
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case user
        case reel
        case text
        case createdAt = "created_at"
        case likeCount = "like_count"
        case parent
        case replies
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(user, forKey: .user)
        try container.encode(reel, forKey: .reel)
        try container.encode(text, forKey: .text)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(likeCount, forKey: .likeCount)
        try container.encodeIfPresent(parent, forKey: .parent)
        try container.encode(replies, forKey: .replies)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension Comment: Identifiable {}
