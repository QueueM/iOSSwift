//
// PatchedStory.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PatchedStory: Codable, JSONEncodable, Hashable {

    public var id: Int?
    public var viewCount: Int?
    public var video: String?
    public var image: String?
    public var caption: String?
    public var createdAt: Date?
    /** Story expires 24 hours after creation */
    public var expiresAt: Date?
    /** AI-generated tags for story video */
    public var aiVideoTags: AnyCodable?
    /** Advanced analytics data */
    public var analyticsData: AnyCodable?
    public var shop: Int?
    public var viewedBy: [Int]?

    public init(id: Int? = nil, viewCount: Int? = nil, video: String? = nil, image: String? = nil, caption: String? = nil, createdAt: Date? = nil, expiresAt: Date? = nil, aiVideoTags: AnyCodable? = nil, analyticsData: AnyCodable? = nil, shop: Int? = nil, viewedBy: [Int]? = nil) {
        self.id = id
        self.viewCount = viewCount
        self.video = video
        self.image = image
        self.caption = caption
        self.createdAt = createdAt
        self.expiresAt = expiresAt
        self.aiVideoTags = aiVideoTags
        self.analyticsData = analyticsData
        self.shop = shop
        self.viewedBy = viewedBy
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case viewCount = "view_count"
        case video
        case image
        case caption
        case createdAt = "created_at"
        case expiresAt = "expires_at"
        case aiVideoTags = "ai_video_tags"
        case analyticsData = "analytics_data"
        case shop
        case viewedBy = "viewed_by"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(viewCount, forKey: .viewCount)
        try container.encodeIfPresent(video, forKey: .video)
        try container.encodeIfPresent(image, forKey: .image)
        try container.encodeIfPresent(caption, forKey: .caption)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(expiresAt, forKey: .expiresAt)
        try container.encodeIfPresent(aiVideoTags, forKey: .aiVideoTags)
        try container.encodeIfPresent(analyticsData, forKey: .analyticsData)
        try container.encodeIfPresent(shop, forKey: .shop)
        try container.encodeIfPresent(viewedBy, forKey: .viewedBy)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension PatchedStory: Identifiable {}
