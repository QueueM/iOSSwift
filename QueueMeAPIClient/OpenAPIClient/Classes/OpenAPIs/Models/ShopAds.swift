//
// ShopAds.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ShopAds: Codable, JSONEncodable, Hashable {

    public static let titleRule = StringRule(minLength: nil, maxLength: 300, pattern: nil)
    public static let budgetRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^-?\\d{0,8}(?:\\.\\d{0,2})?$/")
    public var id: Int
    public var targetGender: TargetGenderEnum?
    public var title: String
    public var description: String
    public var image: String?
    /** Total budget for the ad */
    public var budget: Decimal
    public var isActive: Bool?
    public var startDate: Date?
    public var endDate: Date
    public var latitude: Double?
    public var longitude: Double?
    /** AI targeting metadata for this ad */
    public var aiTargetingData: AnyCodable?
    public var shop: Int
    public var service: Int?

    public init(id: Int, targetGender: TargetGenderEnum? = nil, title: String, description: String, image: String? = nil, budget: Decimal, isActive: Bool? = nil, startDate: Date? = nil, endDate: Date, latitude: Double? = nil, longitude: Double? = nil, aiTargetingData: AnyCodable? = nil, shop: Int, service: Int? = nil) {
        self.id = id
        self.targetGender = targetGender
        self.title = title
        self.description = description
        self.image = image
        self.budget = budget
        self.isActive = isActive
        self.startDate = startDate
        self.endDate = endDate
        self.latitude = latitude
        self.longitude = longitude
        self.aiTargetingData = aiTargetingData
        self.shop = shop
        self.service = service
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case targetGender = "target_gender"
        case title
        case description
        case image
        case budget
        case isActive = "is_active"
        case startDate = "start_date"
        case endDate = "end_date"
        case latitude
        case longitude
        case aiTargetingData = "ai_targeting_data"
        case shop
        case service
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encodeIfPresent(targetGender, forKey: .targetGender)
        try container.encode(title, forKey: .title)
        try container.encode(description, forKey: .description)
        try container.encodeIfPresent(image, forKey: .image)
        try container.encode(budget, forKey: .budget)
        try container.encodeIfPresent(isActive, forKey: .isActive)
        try container.encodeIfPresent(startDate, forKey: .startDate)
        try container.encode(endDate, forKey: .endDate)
        try container.encodeIfPresent(latitude, forKey: .latitude)
        try container.encodeIfPresent(longitude, forKey: .longitude)
        try container.encodeIfPresent(aiTargetingData, forKey: .aiTargetingData)
        try container.encode(shop, forKey: .shop)
        try container.encodeIfPresent(service, forKey: .service)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ShopAds: Identifiable {}
