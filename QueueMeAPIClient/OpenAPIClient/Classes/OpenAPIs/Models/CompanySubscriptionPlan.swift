//
// CompanySubscriptionPlan.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Serializer for subscription plan definitions. */
public struct CompanySubscriptionPlan: Codable, JSONEncodable, Hashable {

    public static let nameRule = StringRule(minLength: nil, maxLength: 200, pattern: nil)
    public static let durationDaysRule = NumericRule<Int64>(minimum: -9223372036854775808, exclusiveMinimum: false, maximum: 9223372036854775807, exclusiveMaximum: false, multipleOf: nil)
    public var id: Int
    public var name: String
    public var price: Double
    public var durationDays: Int64
    public var description: String

    public init(id: Int, name: String, price: Double, durationDays: Int64, description: String) {
        self.id = id
        self.name = name
        self.price = price
        self.durationDays = durationDays
        self.description = description
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case price
        case durationDays = "duration_days"
        case description
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(name, forKey: .name)
        try container.encode(price, forKey: .price)
        try container.encode(durationDays, forKey: .durationDays)
        try container.encode(description, forKey: .description)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension CompanySubscriptionPlan: Identifiable {}
