//
// ServiceFAQ.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ServiceFAQ: Codable, JSONEncodable, Hashable {

    public static let questionRule = StringRule(minLength: nil, maxLength: 300, pattern: nil)
    public static let orderIndexRule = NumericRule<Int64>(minimum: 0, exclusiveMinimum: false, maximum: 9223372036854775807, exclusiveMaximum: false, multipleOf: nil)
    public var id: Int
    /** The FAQ question */
    public var question: String
    /** The answer to the FAQ question */
    public var answer: String
    /** Order index for display */
    public var orderIndex: Int64?
    public var extendedDetails: Int

    public init(id: Int, question: String, answer: String, orderIndex: Int64? = nil, extendedDetails: Int) {
        self.id = id
        self.question = question
        self.answer = answer
        self.orderIndex = orderIndex
        self.extendedDetails = extendedDetails
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case question
        case answer
        case orderIndex = "order_index"
        case extendedDetails = "extended_details"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(question, forKey: .question)
        try container.encode(answer, forKey: .answer)
        try container.encodeIfPresent(orderIndex, forKey: .orderIndex)
        try container.encode(extendedDetails, forKey: .extendedDetails)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ServiceFAQ: Identifiable {}
